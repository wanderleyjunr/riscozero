# Generated by Django 4.1.5 on 2023-07-04 20:36

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import tl.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Config',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('houses', tl.models.ChoiceArrayField(base_field=models.CharField(choices=[('188Bet', '188Bet'), ('22Bet', '22Bet'), ('888sport', '888sport'), ('1Win', '1Win'), ('1xBet', '1xBet'), ('AmuletoBet', 'AmuletoBet'), ('Bet365', 'Bet365'), ('Betano', 'Betano'), ('Betcris', 'Betcris'), ('BetFair', 'BetFair'), ('Betfair SB', 'Betfair SB'), ('Betnacional', 'Betnacional'), ('Betsson', 'Betsson'), ('Betsul', 'Betsul'), ('BetVictor', 'BetVictor'), ('BetWay', 'BetWay'), ('BetWarrior', 'BetWarrior'), ('Blaze', 'Blaze'), ('Dafabet', 'Dafabet'), ('DafaSports', 'DafaSports'), ('GGBet', 'GGBet'), ('GaleraBet', 'GaleraBet'), ('LeoVegas', 'LeoVegas'), ('Marjosports', 'Marjosports'), ('MrJack', 'MrJack'), ('Netbet', 'Netbet'), ('NoviBet', 'NoviBet'), ('Parimatch', 'Parimatch'), ('KTO', 'KTO'), ('Pin-up', 'Pin-up'), ('Pinnacle', 'Pinnacle'), ('PixBet', 'PixBet'), ('Playpix', 'Playpix'), ('Rivalo', 'Rivalo'), ('SportsBet', 'SportsBet'), ('Sportingbet', 'Sportingbet'), ('Stake', 'Stake'), ('TempoBet', 'TempoBet'), ('VBet', 'VBet'), ('Vulkan Bet', 'Vulkan Bet'), ('Winmasters', 'Winmasters')], max_length=100, verbose_name='Casas'), size=None)),
                ('min_profit', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Lucro m√≠nimo')),
                ('max_profit', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Lucro m√°ximo')),
                ('message', models.TextField(default='‚û°Ô∏èNOVA OPORTUNIDADE \n\nüèÜ ESPORTE: {esporte}\nüè≥Ô∏èLIGA: {liga}\nüé™EVENTO: {evento}\n‚è∞HORARIO: {horario}\nüìäLUCRO: {lucro}\nüìÅMERCADO: {mercado}\n\nüè†1¬∞ - {casa1}\nODD: {odd_casa1}\nLink : {link_casa1}\n\nüè†2¬∞ - {casa2}\nODD: {odd_casa2}\nLink : {link_casa2}\n\n‚úÖVERIFIQUE O VALOR M√ÅXIMO QUE AS CASAS DEIXAM APOSTAR\n‚úÖVERIFIQUE SE AS ODDS N√ÉO MUDARAM\n‚úÖRECOMENDADO: R$ 1000\n‚úÖN√ÉO USAR VALORES QUEBRADOS NAS ENTRADAS', verbose_name='Mensagem')),
                ('minutes', models.IntegerField(default=1, help_text='Enviar a cada x minutos', verbose_name='Minutos')),
                ('bot_token', models.CharField(max_length=255, null=True, verbose_name='Bot Token')),
                ('chat_id', models.BigIntegerField(null=True, verbose_name='Chat ID')),
                ('sent_timestamp', models.DateTimeField(editable=False, null=True)),
                ('per_time', models.IntegerField(default=1, help_text='Quantidade de sinais a serem enviados a cada x minutos', verbose_name='Qtd. Sinais')),
            ],
            options={
                'verbose_name': 'Telegram - Configura√ß√£o',
                'verbose_name_plural': 'Telegram - Configura√ß√µes',
            },
        ),
        migrations.CreateModel(
            name='Sent',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('surebet_id', models.CharField(max_length=100)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tl.config')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
